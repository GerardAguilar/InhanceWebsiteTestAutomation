//From AutomationTestSeleniumFormatted.java

//  public void given_PageIsHome_When_LogoIsPressed_Then_PageShouldBeHome() {         
//      //Logo
//      WebElement element = driver.findElement(By.id("logo"));
//      element.click();
//      String actualUrl = driver.getCurrentUrl();
//      String expectedUrl = "http://www.inhance.com/";
//      Assert.assertEquals(actualUrl, expectedUrl);
//  }
//  
//  public void given_PageIsHome_When_PageIsLoaded_Then_BackgroundVideoSrcShouldBeAsGiven() {         
//      //Background
//      WebElement element = driver.findElement(By.id("background_video"));
//      String actualSrc = element.getAttribute("src");
//      String expectedSrc = "http://www.inhance.com/Inhance-library/mp4/cinematic_wallpaper_blue_v04-default.mp4";
//      Assert.assertEquals(actualSrc, expectedSrc);  
//  }
//
//  public void given_PageIsHome_When_BackgroundIsVideo_Then_BackgroundVideoShouldPlay() {       
//      WebElement element = driver.findElement(By.id("background_video"));
//      float currentPlayTime = Float.parseFloat(element.getAttribute("currentTime"));
//      Assert.assertTrue(currentPlayTime>0);
//  }


//  @AfterMethod
//  public void takeScreenShotOnFailure(ITestResult testResult) throws IOException { 
//      System.out.println("takeScreenShotOnFailure()");
//      if (testResult.getStatus() == ITestResult.FAILURE) { 
//          File scrFile = ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE); 
//          Long timestamp = (new Timestamp(System.currentTimeMillis())).getTime();
//          FileUtils.copyFile(scrFile, new File("c:\\tmp\\screenshot"+ timestamp +".png"));
//      } 
//  }

//In Constructor
//      String path = AutomationTestSeleniumFormatted.class.getProtectionDomain().getCodeSource().getLocation().getPath();
//      String decodedPath;
//      try {
//          decodedPath = URLDecoder.decode(path, "UTF-8");
//          ImagePath.setBundlePath(decodedPath);
//          System.out.println("Decoded Path: " + decodedPath);
//          System.out.println("Bundle Path: " + ImagePath.getBundlePath());
//      } catch (UnsupportedEncodingException e) {
//          // TODO Auto-generated catch block
//          e.printStackTrace();
//      }       

//      System.out.println("Bundle Path: " + ImagePath.getBundlePath());
//      ImagePath.add(new ClassPathResource("imgs").getURL());//ClassPathResource is Java Spring specific
//      ImagePath.add(AutomationTestSeleniumFormatted.class.get"\\images\\");
//      ImagePath.add("InhanceWebsiteTestAutomation"+"/imgs");

//      workBackground = "/images/1518131732322.png";
//      ImagePath.add(AutomationTestSeleniumFormatted.class.getCanonicalName()+workBackground);
//      aboutBackground = "/images/1518138066238.png";
//      ImagePath.add(AutomationTestSeleniumFormatted.class.getCanonicalName()+aboutBackground);
//      newsBackground ="/images/1518138775741.png";
//      ImagePath.add(AutomationTestSeleniumFormatted.class.getCanonicalName()+newsBackground);
//      contactBackground = "/images/1518138158909.png";
//      ImagePath.add(AutomationTestSeleniumFormatted.class.getCanonicalName()+contactBackground);
//      System.out.println("Hello "+ImagePath.getBundlePath());
        
//      workBackground = "C:\\InhanceWebsiteTestAutomation.jar\\1518131732322.png";
//      aboutBackground = "C:\\InhanceWebsiteTestAutomation.jar\\1518138066238.png";
//      newsBackground ="C:\\InhanceWebsiteTestAutomation.jar\\1518138775741.png";
//      contactBackground = "C:\\InhanceWebsiteTestAutomation.jar\\1518138158909.png";
        
//      workBackground = ImagePath.getBundlePath() + "/images/1518131732322.png";//for some reason, jar files error out on loading these images
//      aboutBackground = ImagePath.getBundlePath() + "/images/1518138066238.png";
//      newsBackground = ImagePath.getBundlePath() + "/images/1518138775741.png";
//      contactBackground = ImagePath.getBundlePath() + "/images/1518138158909.png";        

// In setUp()
//      System.setProperty("webdriver.gecko.driver", "C:\\geckodriver-v0.19.1-win64\\geckodriver.exe");
        
//      String path = MainOne.class.getProtectionDomain().getCodeSource().getLocation().getPath();
//      String geckodriverLocation = URLDecoder.decode(path, "UTF-8");
//      URL inputUrl = getClass().getResource(geckodriverLocation+"/geckodriver.exe");
//      File dest = new File("C:/");
//      FileUtils.copyURLToFile(inputUrl, dest);
//        driver = new FirefoxDriver();//already at the bottom
        
//      String path = MainOne.class.getProtectionDomain().getCodeSource().getLocation().getPath();
//      String geckodriverLocation = URLDecoder.decode(path, "UTF-8");
//      File scrFile = geckodriverLocation+"/geckdriver.exe";
//      Long timestamp = (new Timestamp(System.currentTimeMillis())).getTime();
//      System.out.println("Taking screenshot at: "+timestamp);
//      try {
//          FileUtils.copyFile(scrFile, new File("c:\\tmp\\screenshot"+ timestamp +".png"));
////            FileHandler.copy(scrFile, new File("c:\\tmp\\screenshot.png"));
//      } catch (IOException e) {
//          e.printStackTrace();
//      }
        
//      String path = MainOne.class.getProtectionDomain().getCodeSource().getLocation().getPath();
//      String geckodriverLocation;
//      geckodriverLocation = URLDecoder.decode(path, "UTF-8");
//      System.setProperty("webdriver.gecko.driver", geckodriverLocation+"/geckodriver.exe");
        
//      String path = MainOne.class.getCanonicalName()+"/images";
//      String geckodriverLocation = URLDecoder.decode(path, "UTF-8");
//      System.setProperty("webdriver.gecko.driver", geckodriverLocation + "/geckodriver.exe");

//From tests
//  protected void checkTopBar() {
//      WebElement element = driver.findElement(By.id("menu_cont"));
//      element.isDisplayed();
//  }
    
//  protected void checkInhanceLogo() {
//      WebElement element = driver.findElement(By.id("logo"));
//      org.sikuli.script.Pattern pattern = new org.sikuli.script.Pattern(logoButtonHighlighted).similar(0.01f);//clashes with Pattern from java.util.regex
//      element.isDisplayed();
//      
//      //Hover and check highlight
//      Actions builder = new Actions(driver);
//      builder.moveToElement(element).perform();
//      try {
//            s.wait(pattern,waitForDynamicElement);
//            assert(s.exists(pattern)!=null);            
//      }catch(FindFailed e) {
//          takeScreenshot();
//          e.printStackTrace();
//          Assert.fail();
//      }
//  }
//From checkHomeBackground()
//      try {
////            assert(currentPlayTime==0);
////            Assert.assertTrue(currentPlayTime>0);
////            Assert.assertTrue(false);
//      }catch(AssertionError e) {
//          takeScreenshot();   
//      }
//From checkHomeFacebookButton()
//      Set<String> windowHandles = driver.getWindowHandles();
//      //the if here is there to deal with times when the driver's tab focus isn't consistent 
//      if(!(driver.getTitle().equals(homePageAddress))) {
//          for(String winHandle : windowHandles){//gets the last opened window
//              //focuses the driver onto the last opened tab
//              driver.switchTo().window(winHandle);
//          }
//      }
//---
//      //TODO need to check background of case study
//      driver.manage().timeouts().implicitlyWait(2, TimeUnit.SECONDS);
//      try {
//          Thread.sleep(5000);
//      } catch (InterruptedException e) {
//          // TODO Auto-generated catch block
//          e.printStackTrace();
//      }
//      xpathExpression = "//html//div[@id='cs']/div[2]/div[2]";
//      element = driver.findElement(By.xpath(xpathExpression));
//      while(!(checkIfOnTopOfPage()));//this has the possibility of hanging
//      wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector("main:not([style*=\"margin-top\"])")));
//---
//        //the problem here is that the move to element moves to the image while it is still being moved by the autoscroll
//      wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathExpression)));
//      driver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);//implicit waits are set for the life of the driver
//      System.out.println("Finished implicitly waiting");
//      Thread.sleep(3000);


//      catch (InterruptedException e) {
//          // TODO Auto-generated catch block
//          e.printStackTrace();
//      }
//---
//the below functions require dependencies on previous functions but the TestNG execution sequence is not top to bottom. 
    //Unless we include priorities and dependencies. (Would allow us to view TestNG results)
    //Another option is to make each test completely independent of the other (can still be modular)
    
//  @Test(priority = 0)
//  protected void homeTest() {
//      //TODO
//      checkHomeBackground();      
//      checkInhanceLogoHome();
//      checkHamburgerMenu();
//      checkHamburgerMenuWork();
//      checkHamburgerMenuAbout();
//      checkHamburgerMenuNews();
//      checkHamburgerMenuContact();
//      checkDownArrow();
//      clickDownArrow();
//      checkHomeBackground2();
//      checkHomeBackground3();
//      checkHomeBackground4();
//  }
//  @Test(priority = 1)
//  protected void workSmokeTest() {
//      clickHamburgerButton();
//      clickWorkButton();
//      checkWorkBackground();
//      clickBackButton();      
//  }
//  @Test(priority = 1)
//  protected void aboutSmokeTest() {
//      checkHamburgerButton();
//      clickHamburgerButton();
//      clickAboutButton();
//      checkAboutBackground();
//      clickBackButton();
//  }
//  @Test(priority = 1)
//  protected void newsSmokeTest() {
//      checkHamburgerButton();
//      clickHamburgerButton();
//      clickNewsButton();
//      checkNewsBackground();
//      clickBackButton();
//  }
//  @Test(priority = 1)
//  protected void contactSmokeTest() {
//      checkHamburgerButton();
//      clickHamburgerButton();
//      clickContactButton();
//      checkContactBackground();
//      clickBackButton();
//  }

//  protected void headerTest() {//difficult to do with the movie background for the home page
//      checkTopBar();
//      checkHamburgerButton();
//      checkHamburgerMenu();
//      checkHamburgerMenuHighlights();
//  }
//---
//      //clashes with Pattern from java.util.regex
//      org.sikuli.script.Pattern pattern = new org.sikuli.script.Pattern(logoButtonHomeHighlighted).similar(0.5f);
//      try {
//          element.isDisplayed();
//            s.wait(pattern,waitForDynamicElement);   
//            element.click();
//            waitForScrollToFinish();
//      }catch(FindFailed e) {
//          takeScreenshot();
//          e.printStackTrace();
//          Assert.fail();
//      }   
//      driver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);
//---
//      JavascriptExecutor executor = (JavascriptExecutor) driver;
//      Wait<JavascriptExecutor, Boolean> fluentWait = new FluentWait<JavascriptExecutor, Boolean>(executor)
//              .withTimeout(30, TimeUnit.SECONDS)
//              .pollingEvery(5, TimeUnit.SECONDS)
//              .ignoring(NoSuchElementException.class);
//      Boolean scrolling = wait.until(new Function<JavascriptExecutor, Boolean>(){
//          public Boolean apply(javascriptExecutor executor) {
//              return true;
//          }
//      });
//---
//  protected void waitForScrollToFinish(int y) {       
//      Wait<JavascriptExecutor> wait = new FluentWait<JavascriptExecutor>(executor)
//              .withTimeout(6, TimeUnit.SECONDS)
//              .pollingEvery(1, TimeUnit.SECONDS)
//              .ignoring(NoSuchElementException.class);
//
//      wait.until(new Function<JavascriptExecutor, Boolean>() 
//      {
//          public Boolean apply(JavascriptExecutor executor) {
//              boolean scrollStatus = executor.executeScript("return document.readyState").toString().equals("complete");
//              if(scrollStatus) {
//                  System.out.println("Finally: " + getPageYOffset());
//                  return true;
//              }else {
//                  System.out.println("Not Zero: " + getPageYOffset());
//                  return false;
//              }
//          }
//      });     
//  }